{"version":3,"sources":["assets/images/no-image.png","assets/images/vakaren.png","assets/images/anonymous.png","assets/images/anonymous-dark.png","assets/images/github.png","store/actions.js","store/reducers/initialState.js","store/reducers/index.js","store/reducers/data.js","store/sagas.js","store/store.js","components/MovieCard/MovieCard.js","components/SearchMovies/SearchMovies.js","components/Logo/Logo.js","components/Authenticate/Authenticate.js","components/Contact/Contact.js","components/Home/Home.js","components/MoviePage/MoviePage.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","getAuthTokenAction","type","getPopularMoviesAction","receivePopularMoviesAction","data","receiveSearchResultAction","receiveRandomMovieSearch","requestSessionId","receiveMovieById","receiveMovieVideos","receiveMoviePosters","getAccountDetails","receiveAccountDetails","getFavList","accountId","getWatchList","receiveFavList","receiveWatchList","resetSearchResults","apiToken","searchResults","results","searchHasResults","isAuthenticated","movieDetails","movieVideos","moviePosters","accountDetails","combineReducers","state","initialState","popularMovies","latestMovieResultId","id","favoriteMovies","userFavList","userWatchList","getPopularMovies","getMovieById","getMovieVideos","getMoviePosters","getMovieSearch","getLatestMovieSearch","addToList","requestApiData","apiKey","process","getAuthToken","fetch","then","response","json","location","window","request_token","catch","error","console","log","action","url","body","JSON","stringify","method","headers","success","session_id","localStorage","setItem","vakaren_session_id","parse","getItem","put","query","page","movieId","listType","responseJSON","favorited","takeEvery","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","run","mySaga","withRouter","connect","favoritedMovie","get","dispatch","movie","watchlisted","imageLink","poster_path","NoImage","style","backgroundImage","useEffect","className","original_title","release_date","overview","substring","to","onClick","clickHandler","requestSearchResultAction","requestLatestMovieSearch","history","useState","searchTerm","setSearchTerm","userListResultsExists","length","searchResultsExists","data-test","onSubmit","event","preventDefault","encodeURIComponent","trim","placeholder","onChange","target","value","getRandomMovie","Math","floor","random","push","onClickRandomMovieHandler","map","some","listObj","key","Logo","classes","onClickHandler","document","documentElement","addEventListener","eyeMovementAnimation","removeEventListener","querySelectorAll","forEach","e","x","getBoundingClientRect","left","clientWidth","y","top","clientHeight","rot","atan2","pageX","pageY","PI","transform","alt","src","Vakaren","width","Authenticate","sessionInfo","data-position","data-tooltip","Spy","SpyDark","Contact","href","Github","bindActionCreators","search","includes","authorizedToken","params","split","paramsObject","param","posters","movieBackdrops","backdrops","match","title","runtime","tagline","genres","homepage","jumbotronBackgroundStyle","face","rel","genre","name","video","index","frameBorder","allow","allowFullScreen","poster","file_path","App","store","exact","path","component","MoviePage","Home","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.074614d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-image.5fb4e99e.png\";","module.exports = __webpack_public_path__ + \"static/media/vakaren.2582dbc8.png\";","module.exports = __webpack_public_path__ + \"static/media/anonymous.30a0a053.png\";","module.exports = __webpack_public_path__ + \"static/media/anonymous-dark.29167867.png\";","module.exports = __webpack_public_path__ + \"static/media/github.d22ee372.png\";","export const REQUEST_API_DATA = \"REQUEST_API_DATA\";\r\nexport const RECEIVE_API_DATA = \"RECEIVE_API_DATA\";\r\n\r\nexport const GET_AUTH_TOKEN = 'GET_AUTH_TOKEN';\r\nexport const RECEIVE_REQUEST_TOKEN = 'RECEIVE_REQUEST_TOKEN';\r\n\r\nexport const GET_POPULAR_MOVIES = 'GET_POPULAR_MOVIES';\r\nexport const RECEIVE_POPULAR_MOVIES = 'RECEIVE_POPULAR_MOVIES';\r\n\r\nexport const GET_SEARCH_RESULT = 'GET_SEARCH_RESULT';\r\nexport const RECEIVE_MOVIE_SEARCH = 'RECEIVE_MOVIE_SEARCH';\r\n\r\nexport const GET_LATEST_MOVIE_SEARCH = 'GET_LATEST_MOVIE_SEARCH';\r\nexport const RECEIVE_LATEST_MOVIE_SEARCH = 'RECEIVE_LATEST_MOVIE_SEARCH';\r\n\r\nexport const REQUEST_SESSION_ID = 'REQUEST_SESSION_ID';\r\nexport const RECEIVE_SESSION_ID = 'RECEIVE_SESSION_ID';\r\n\r\nexport const GET_MOVIE_BY_ID = 'GET_MOVIE_BY_ID';\r\nexport const RECEIVE_MOVIE_BY_ID = 'RECEIVE_MOVIE_BY_ID';\r\n\r\nexport const GET_MOVIE_VIDEOS = 'GET_MOVIE_VIDEOS';\r\nexport const RECEIVE_MOVIE_VIDEOS = 'RECEIVE_MOVIE_VIDEOS';\r\n\r\nexport const GET_MOVIE_POSTERS = 'GET_MOVIE_POSTERS';\r\nexport const RECEIVE_MOVIE_POSTERS = 'RECEIVE_MOVIE_POSTERS';\r\n\r\nexport const GET_ACCOUNT_DETAILS = 'GET_ACCOUNT_DETAILS';\r\nexport const RECEIVE_ACCOUNT_DETAILS = 'RECEIVE_ACCOUNT_DETAILS';\r\n\r\nexport const ADD_TO_LIST = 'ADD_TO_LIST';\r\nexport const ADD_TO_LIST_RESPONSE = 'ADD_TO_LIST_RESPONSE';\r\n\r\nexport const ADD_TO_WATCHLIST = 'ADD_TO_WATCHLIST';\r\nexport const ADD_TO_WATCHLIST_RESPONSE = 'ADD_TO_WATCHLIST_RESPONSE';\r\n\r\nexport const ADD_TO_FAVORITELIST = 'ADD_TO_FAVORITELIST';\r\nexport const ADD_TO_FAVORITELIST_RESPONSE = 'ADD_TO_FAVORITELIST_RESPONSE';\r\n\r\nexport const GET_FAV_LIST = 'GET_FAV_LIST';\r\nexport const RECEIVE_FAV_LIST = 'RECEIVE_FAV_LIST';\r\n\r\nexport const GET_WATCH_LIST = 'GET_WATCH_LIST';\r\nexport const RECEIVE_WATCH_LIST = 'RECEIVE_WATCH_LIST';\r\n\r\nexport const RESET_SEARCH_RESULTS = 'RESET_SEARCH_RESULTS'; \r\n\r\nexport const requestApiDataAction = () => ({ type: REQUEST_API_DATA });\r\nexport const receiveApiDataAction = data => ({ type: RECEIVE_API_DATA, data });\r\n\r\nexport const getAuthTokenAction = () => ({ type: GET_AUTH_TOKEN });\r\nexport const receiveRequestTokenAction = data => ({ type: RECEIVE_REQUEST_TOKEN, data });\r\n\r\nexport const getPopularMoviesAction = () => ({ type: GET_POPULAR_MOVIES });\r\nexport const receivePopularMoviesAction = data => ({ type: RECEIVE_POPULAR_MOVIES, data });\r\n\r\nexport const requestSearchResultAction = (query, page) => ({ type: GET_SEARCH_RESULT, query, page }); \r\nexport const receiveSearchResultAction = data => ({ type: RECEIVE_MOVIE_SEARCH, data }); \r\n\r\nexport const requestLatestMovieSearch = () => ({ type: GET_LATEST_MOVIE_SEARCH });\r\nexport const receiveRandomMovieSearch = data => ({ type: RECEIVE_LATEST_MOVIE_SEARCH, data});\r\n\r\nexport const requestSessionId = data => ({ type: REQUEST_SESSION_ID, data });\r\n\r\nexport const getMovieById = id => ({ type: GET_MOVIE_BY_ID, id });\r\nexport const receiveMovieById = data => ({ type: RECEIVE_MOVIE_BY_ID, data });\r\n\r\nexport const getMovieVideos = id => ({ type: GET_MOVIE_VIDEOS, id });\r\nexport const receiveMovieVideos = data => ({ type: RECEIVE_MOVIE_VIDEOS, data });\r\n\r\nexport const getMoviePosters = id => ({ type: GET_MOVIE_POSTERS, id });\r\nexport const receiveMoviePosters = data => ({ type: RECEIVE_MOVIE_POSTERS, data });\r\n\r\nexport const getAccountDetails = () => ({ type: GET_ACCOUNT_DETAILS});\r\nexport const receiveAccountDetails = data => ({ type: RECEIVE_ACCOUNT_DETAILS, data });\r\n\r\nexport const addToList = (movieId, accountId, listType) => ({ type: ADD_TO_LIST, movieId, accountId, listType });\r\nexport const addToListResponse = data => ({ type: ADD_TO_LIST_RESPONSE, data });\r\n\r\nexport const getFavList = accountId => ({ type: GET_FAV_LIST, accountId });\r\nexport const getWatchList = accountId => ({ type: GET_WATCH_LIST, accountId });\r\nexport const receiveFavList = data => ({ type: RECEIVE_FAV_LIST, data });\r\nexport const receiveWatchList = data => ({ type: RECEIVE_WATCH_LIST, data });\r\n\r\n\r\nexport const resetSearchResults = () => ({ type: RESET_SEARCH_RESULTS })\r\n\r\nexport const addedToFavorites = data => ({type: ADD_TO_LIST_RESPONSE, data})","export default {\r\n    apiToken: {},\r\n    searchResults: {\r\n        results: [],\r\n    },\r\n    searchHasResults: false,\r\n    isAuthenticated: false,\r\n    movieDetails: {},\r\n    movieVideos: {},\r\n    moviePosters: {},\r\n    accountDetails: {},\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport data from \"./data\";\r\n\r\nexport default combineReducers({\r\n  data\r\n});\r\n","import { \r\n  RECEIVE_API_DATA,\r\n  RECEIVE_REQUEST_TOKEN,\r\n  RECEIVE_POPULAR_MOVIES,\r\n  RECEIVE_MOVIE_SEARCH,\r\n  RECEIVE_LATEST_MOVIE_SEARCH,\r\n  REQUEST_SESSION_ID,\r\n  RECEIVE_MOVIE_BY_ID,\r\n  RECEIVE_MOVIE_VIDEOS,\r\n  RECEIVE_MOVIE_POSTERS,\r\n  RECEIVE_ACCOUNT_DETAILS,\r\n  RECEIVE_FAV_LIST,\r\n  RECEIVE_WATCH_LIST,\r\n  RESET_SEARCH_RESULTS,\r\n  ADD_TO_LIST_RESPONSE\r\n} from \"../actions\";\r\n\r\nimport initialState from './initialState';\r\n\r\nexport default (state = initialState, { type, data }) => {\r\n  switch (type) {\r\n    case RECEIVE_REQUEST_TOKEN:\r\n      return {\r\n        ...state,\r\n        apiToken: data\r\n      };\r\n    //to be added in the future\r\n    case RECEIVE_POPULAR_MOVIES: \r\n      return {\r\n        ...state,\r\n        popularMovies: data\r\n      };\r\n    case RECEIVE_MOVIE_SEARCH: \r\n      return {\r\n        ...state,\r\n        searchResults: data\r\n      };\r\n    case RECEIVE_LATEST_MOVIE_SEARCH: \r\n      return {\r\n        ...state,\r\n        latestMovieResultId: data.id\r\n      };\r\n    case REQUEST_SESSION_ID:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: data ? true : false\r\n      };\r\n    case RECEIVE_MOVIE_BY_ID: \r\n      return {\r\n        ...state,\r\n        movieDetails: data\r\n      };\r\n    case ADD_TO_LIST_RESPONSE:\r\n      return {\r\n        ...state,\r\n        favoriteMovies: {\r\n          ...state.favoriteMovies,\r\n          data\r\n        }\r\n      }\r\n    case RECEIVE_API_DATA: \r\n      return {\r\n        ...state,\r\n        movieDetails: data\r\n      };\r\n    case RECEIVE_MOVIE_VIDEOS:\r\n      return {\r\n        ...state,\r\n        movieVideos: data\r\n      };\r\n    case RECEIVE_MOVIE_POSTERS:\r\n      return {\r\n        ...state,\r\n        moviePosters: data\r\n      };\r\n    case RECEIVE_ACCOUNT_DETAILS: \r\n      return {\r\n        ...state,\r\n        accountDetails: data\r\n      };\r\n    case RECEIVE_FAV_LIST: \r\n      return {\r\n        ...state,\r\n        userFavList: data\r\n      }\r\n    case RECEIVE_WATCH_LIST: \r\n      return {\r\n        ...state,\r\n        userWatchList: data\r\n      }  \r\n    case RESET_SEARCH_RESULTS:\r\n      return {\r\n        ...state,\r\n        searchResults: initialState.searchResults\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { put, takeEvery } from \"redux-saga/effects\";\r\n// import { call, put, takeEvery, takeLatest, take } from \"redux-saga/effects\";\r\n\r\n\r\nimport { \r\n  GET_AUTH_TOKEN, \r\n  GET_POPULAR_MOVIES, \r\n  GET_SEARCH_RESULT, \r\n  GET_LATEST_MOVIE_SEARCH,\r\n  REQUEST_SESSION_ID,\r\n  GET_MOVIE_BY_ID,\r\n  GET_MOVIE_VIDEOS,\r\n  GET_MOVIE_POSTERS,\r\n  GET_ACCOUNT_DETAILS,\r\n  ADD_TO_LIST,\r\n  GET_FAV_LIST,\r\n  GET_WATCH_LIST,\r\n  receiveSearchResultAction,  \r\n  receiveRandomMovieSearch, \r\n  receivePopularMoviesAction,\r\n  receiveMovieById,\r\n  receiveMovieVideos,\r\n  receiveMoviePosters,\r\n  receiveAccountDetails,\r\n  addToListResponse,\r\n  receiveWatchList,\r\n  receiveFavList,\r\n } from \"./actions\";\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY; \r\n\r\n//authentication\r\nexport const getAuthToken = () => {\r\n  fetch(`https://api.themoviedb.org/3/authentication/token/new?api_key=${apiKey}`)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n          const location = window.location;\r\n          const { request_token } = response;\r\n          window.location = `https://www.themoviedb.org/authenticate/${request_token}?redirect_to=${location}`;\r\n      })\r\n      .catch(error => console.log(error));\r\n};\r\n\r\nexport const requestSessionId = (action) => {\r\n  // after the user allows the request_token, get the new session_id using that token\r\n  const url = `https://api.themoviedb.org/3/authentication/session/new?api_key=${apiKey}`;\r\n  const body = JSON.stringify({\r\n      \"request_token\": action.data\r\n  });\r\n\r\n\r\n  fetch(url, {\r\n      method: 'POST',\r\n      body: body,\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      }\r\n  })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n          const { success, session_id } = response;\r\n          if (success) {\r\n              localStorage.setItem('vakaren_session_id', JSON.stringify({ session_id }));\r\n          }\r\n        })\r\n      .catch(error => console.log(error));\r\n};\r\n\r\nexport function* getAccountDetails() {\r\n  const vakaren_session_id = JSON.parse(localStorage.getItem('vakaren_session_id'));\r\n  try {\r\n    const response = yield fetch(`https://api.themoviedb.org/3/account?api_key=${apiKey}&session_id=${vakaren_session_id.session_id}`)\r\n    const data = yield response.json();\r\n    yield put(receiveAccountDetails(data));\r\n  } catch (e) {\r\n      console.log(e);\r\n  }\r\n}\r\n\r\nexport function* getPopularMovies(action) {\r\n  try {\r\n    const response = yield fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`)\r\n    const data = yield response.json();\r\n    yield put(receivePopularMoviesAction(data));\r\n  } catch (e) {\r\n      console.log(e); // Just log it for now\r\n  }\r\n}\r\n\r\nexport function* getMovieById (action) {\r\n  try {    \r\n    const response = yield fetch(`https://api.themoviedb.org/3/movie/${action.id}?api_key=${apiKey}`);\r\n    const data = yield response.json();\r\n    yield put(receiveMovieById(data));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport function* getMovieVideos (action) {\r\n  try {\r\n    const response = yield fetch(`https://api.themoviedb.org/3/movie/${action.id}/videos?api_key=${apiKey}&language=en-US`);\r\n    const data = yield response.json();\r\n    yield put(receiveMovieVideos(data));\r\n  } catch(e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport function* getMoviePosters (action) {\r\n  try {\r\n    const response = yield fetch(`https://api.themoviedb.org/3/movie/${action.id}/images?api_key=${apiKey}&language=en-US&include_image_language=en,null`);\r\n    const data = yield response.json();\r\n    yield put(receiveMoviePosters(data));\r\n  } catch(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* getMovieSearch(action) {\r\n  try {\r\n      const response = yield fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${action.query}&page=${action.page}&include_adult=false`);\r\n      const data = yield response.json();\r\n      yield put(receiveSearchResultAction(data));\r\n  } catch (e) {\r\n      console.log(e);\r\n  }\r\n}\r\n\r\n\r\nexport function* getLatestMovieSearch() {\r\n  try {\r\n    // do api call\r\n    const response = yield fetch(`https://api.themoviedb.org/3/movie/latest?api_key=${apiKey}&language=en-US`);\r\n    const data = yield response.json();\r\n    yield put(receiveRandomMovieSearch(data));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* addToList({accountId, movieId, listType, type}) {\r\n\r\n  try {\r\n    const vakaren_session_id = JSON.parse(localStorage.getItem('vakaren_session_id'));\r\n    const url = `https://api.themoviedb.org/3/account/${accountId}/${listType}?api_key=${apiKey}&session_id=${vakaren_session_id.session_id}`;\r\n\r\n    const body = JSON.stringify({\r\n        \"media_type\": \"movie\",\r\n        \"media_id\": movieId,\r\n        [listType]: true\r\n      });\r\n  \r\n      const response = yield fetch(url, {\r\n        method: 'POST',\r\n        body: body,\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        }\r\n      });\r\n\r\n      const responseJSON = yield response.json();\r\n\r\n      const { success } = responseJSON;\r\n\r\n      if (success) {\r\n        yield put(addToListResponse(\r\n          {\r\n            movieId,\r\n            favorited: true\r\n          }\r\n        ));\r\n      } else {\r\n          // good to add messages for the user why it failed; according to the status_code that is returned\r\n          console.log('Action failed');\r\n      }\r\n  } catch(error){\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport function* getFavList({accountId}) {\r\n  const vakaren_session_id = JSON.parse(localStorage.getItem('vakaren_session_id'));\r\n  try {\r\n    // do api call\r\n    const response = yield fetch(`https://api.themoviedb.org/3/account/${accountId}/favorite/movies?api_key=${apiKey}&language=en-US&session_id=${vakaren_session_id.session_id}&sort_by=created_at.asc&page=1`);\r\n    const data = yield response.json();\r\n    yield put(receiveFavList(data));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* getWatchList({accountId}) {\r\n  const vakaren_session_id = JSON.parse(localStorage.getItem('vakaren_session_id'));\r\n  try {\r\n    // do api call\r\n    const response = yield fetch(`https://api.themoviedb.org/3/account/${accountId}/watchlist/movies?api_key=${apiKey}&language=en-US&session_id=${vakaren_session_id.session_id}&sort_by=created_at.asc&page=1`);\r\n    const data = yield response.json();\r\n    yield put(receiveWatchList(data));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default function* requestApiData() {\r\n  yield takeEvery( GET_AUTH_TOKEN, getAuthToken );\r\n  yield takeEvery( GET_POPULAR_MOVIES, getPopularMovies );\r\n  yield takeEvery( GET_SEARCH_RESULT, getMovieSearch );\r\n  yield takeEvery( GET_LATEST_MOVIE_SEARCH, getLatestMovieSearch );\r\n  yield takeEvery( REQUEST_SESSION_ID, requestSessionId);\r\n  yield takeEvery( GET_MOVIE_BY_ID, getMovieById );\r\n  yield takeEvery( GET_MOVIE_VIDEOS, getMovieVideos );\r\n  yield takeEvery( GET_MOVIE_POSTERS, getMoviePosters ); \r\n  yield takeEvery( GET_ACCOUNT_DETAILS, getAccountDetails );\r\n  yield takeEvery( ADD_TO_LIST, addToList );\r\n  yield takeEvery( GET_FAV_LIST, getFavList );\r\n  yield takeEvery( GET_WATCH_LIST, getWatchList );\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nimport reducer from \"./reducers\";\r\nimport mySaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\n  sagaMiddleware.run(mySaga);\r\n","import React, {useEffect} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { addToList, getAccountDetails, getWatchList, getFavList } from './../../store/actions'\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport { get } from 'lodash';\r\nimport NoImage from './../../assets/images/no-image.png'\r\nimport './MovieCard.scss';\r\n\r\nconst MovieCard = ({movie, addToList, accountId, favorited, watchlisted, getWatchList, getFavList, favoritedMovie}) => {\r\n    const imageLink = movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : NoImage;\r\n\r\n    const style = {\r\n      backgroundImage: `url(${imageLink})`\r\n    }\r\n\r\n    const clickHandler = (id, accountId, type) => {\r\n      isAuthenticated && addToList(id, accountId, type);\r\n    }\r\n\r\n    const isAuthenticated = JSON.parse(localStorage.getItem('vakaren_session_id'));\r\n\r\n    useEffect(() => {\r\n      isAuthenticated && getFavList(accountId);\r\n      isAuthenticated && getWatchList(accountId);\r\n    }, [favoritedMovie])\r\n\r\n    return (\r\n        <div className=\"col s12 m6\">\r\n            <div className=\"movie-card\" style={style}>\r\n              <div className=\"movie-card-overlay\"></div>\r\n              <div className=\"movie-card-right-side\">\r\n                <h2 className=\"card-title\">{movie.original_title}</h2>\r\n                <span className=\"card-date\">{movie.release_date}</span>\r\n                <span className=\"card-description\">{movie.overview.substring(0,150)}...</span>\r\n                <Link to={`/movie/${movie.id}`} className=\"btn btn-outline movie-card__button\"> Details </Link>\r\n              </div>\r\n              <div className=\"movie-card-actions\">\r\n              {\r\n                isAuthenticated && <div className=\"card-buttons\">\r\n                    <i className={`large material-icons white-text fav-or-watch ${watchlisted ? 'watchlist' : '' }`} onClick={() => clickHandler(movie.id, accountId, 'watchlist')}>access_time</i>\r\n                    <i className={`large material-icons white-text fav-or-watch ${favorited ? 'fav' : '' }`} onClick={() => addToList(movie.id, accountId, 'favorite')}>favorite</i>\r\n                </div>\r\n              }\r\n              </div>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      addToList: (movieId, accountId, listType) => dispatch(addToList(movieId, accountId, listType)),\r\n      getAccountDetails: () => dispatch(getAccountDetails()),\r\n      getFavList: (accountId) => dispatch(getFavList(accountId)),\r\n      getWatchList: (accountId) => dispatch(getWatchList(accountId)),\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({ \r\n  favoritedMovie: get(state, 'data.favoriteMovies.data.movieId', '') \r\n});\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MovieCard));\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport { get } from 'lodash';\r\nimport { \r\n    requestSearchResultAction,\r\n    requestLatestMovieSearch,\r\n    getAccountDetails,\r\n    getFavList,\r\n    getWatchList,\r\n    resetSearchResults\r\n} from \"../../store/actions\";\r\n\r\n\r\nimport './SearchMovies.scss';\r\nimport MovieCard from '../MovieCard/MovieCard';\r\n\r\nconst SearchMovies = ({\r\n    history,\r\n    accountDetails,\r\n    requestSearchResultAction,\r\n    requestLatestMovieSearch,\r\n    searchResults,\r\n    getFavList,\r\n    getWatchList,\r\n    getAccountDetails,\r\n    latestMovieResultId,\r\n    resetSearchResults,\r\n    userFavList,\r\n    userWatchList\r\n}) => {\r\n\r\n    const [ searchTerm, setSearchTerm ] = useState('');\r\n\r\n    const vakaren_session_id = JSON.parse(localStorage.getItem('vakaren_session_id'));\r\n\r\n    useEffect(() => {\r\n        vakaren_session_id && getAccountDetails();\r\n        requestLatestMovieSearch();\r\n        return () => {\r\n            resetSearchResults();            \r\n          };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        vakaren_session_id && getFavList(accountDetails.id, 'favorite');\r\n        vakaren_session_id && getWatchList(accountDetails.id, 'watchlist')\r\n    }, [accountDetails]);\r\n    \r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const query = encodeURIComponent(searchTerm.trim());\r\n        if (query === '') return; // Add message for the user to type something\r\n        requestSearchResultAction(query, 1);\r\n    }\r\n\r\n    const onClickRandomMovieHandler = () => {\r\n        const getRandomMovie = Math.floor(Math.random() * latestMovieResultId) + 1 \r\n        history.push(`/movie/${getRandomMovie}`)\r\n    } \r\n\r\n    const handleChange = event => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const userListResultsExists = userFavList.length > 0 && userWatchList.length > 0;\r\n    const searchResultsExists = searchResults && searchResults.length > 0;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"input-field col s12 searchbar\">\r\n            <form data-test=\"component-search-form\" onSubmit={handleSubmit}>\r\n\r\n                <input placeholder=\"Type a movie name....\" id=\"search\" type=\"text\" className=\"validate\"  onChange={handleChange}/>\r\n                <div className=\"buttons-container\">\r\n                    <button type=\"submit\" className=\"waves-effect waves-light btn light-blue\">\r\n                        Search\r\n                    </button>            \r\n                    <span type=\"submit\" className=\"waves-effect waves-light btn light-blue\" onClick={() => onClickRandomMovieHandler()}>\r\n                        I feel lucky\r\n                    </span>\r\n                </div>\r\n            </form>\r\n            </div>\r\n            <div className=\"row\">\r\n                { userListResultsExists && searchResultsExists && searchResults.map(movie => \r\n                    <MovieCard \r\n                        watchlisted={userWatchList.some(listObj => listObj.id === movie.id)} \r\n                        favorited={userFavList.some(listObj => listObj.id === movie.id  )} \r\n                        accountId={accountDetails.accountId || 0} \r\n                        movie={movie} \r\n                        key={movie.id}\r\n                    /> )\r\n                }\r\n                { !vakaren_session_id && searchResults.map(movie => \r\n                    <MovieCard \r\n                        movie={movie} \r\n                        key={movie.id}\r\n                    /> )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ \r\n    searchResults: get(state, 'data.searchResults.results', []),\r\n    accountDetails: state.data.accountDetails || {},\r\n    latestMovieResultId: state.data.latestMovieResultId,\r\n    userFavList: get(state, 'data.userFavList.results', []),\r\n    userWatchList: get(state, 'data.userWatchList.results', [])\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        requestSearchResultAction: (query, page) => dispatch(requestSearchResultAction(query, page)),\r\n        requestLatestMovieSearch: () => dispatch(requestLatestMovieSearch()),\r\n        getAccountDetails: () => dispatch(getAccountDetails()),\r\n        getFavList: (accountId) => dispatch(getFavList(accountId)),\r\n        getWatchList: (accountId) => dispatch(getWatchList(accountId)),\r\n        resetSearchResults: () => dispatch(resetSearchResults())\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SearchMovies));\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Vakaren from './../../assets/images/vakaren.png'; \r\nimport './Logo.scss';\r\n\r\nconst Logo = ({classes, onClickHandler}) => {\r\n    useEffect(() => {\r\n        document.documentElement.addEventListener('mousemove', eyeMovementAnimation)\r\n        return () => {\r\n          document.documentElement.removeEventListener('mousemove', eyeMovementAnimation);\r\n        }\r\n      }, [])\r\n\r\n      const eyeMovementAnimation = event => {\r\n        let eye = document.querySelectorAll('.eye');\r\n        eye.forEach(e => {\r\n          let x = (e.getBoundingClientRect().left) + (e.clientWidth / 2)\r\n          let y = (e.getBoundingClientRect().top) + (e.clientHeight / 2)\r\n          let radian = Math.atan2(event.pageX - x, event.pageY - y)\r\n          let rot = (radian * (180 / Math.PI) * -1) + 270;\r\n          e.style.transform = \"rotate(\" + rot + \"deg)\";\r\n        })\r\n      }\r\n\r\n    return (\r\n        <div className={`logo-container ${classes}`}>\r\n          <div className=\"face\">\r\n            <div className=\"eyes\">\r\n              <div className=\"eye\"></div>\r\n              <div className=\"eye\"></div>\r\n            </div>\r\n          </div>\r\n          <Link to=\"/\" onClick={() => { onClickHandler() }}>\r\n            <img className=\"logo\" alt=\"vakaren\" src={Vakaren} width='270px'/>\r\n          </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react'\r\nimport Spy from './../../assets/images/anonymous.png';\r\nimport SpyDark from './../../assets/images/anonymous-dark.png';\r\nimport './Authenticate.scss';\r\n\r\nconst Authenticate = ({onClickHandler, isAuthenticated}) => {\r\n\r\n    const sessionInfo = isAuthenticated ? 'Authenticated Session' : 'Unauthorized Session';\r\n    return (\r\n        <div className={`authorize-image-container ${sessionInfo ? 'authenticated' : 'unauthenticated'}`}>\r\n            <img className=\"authorize-image\" alt=\"spy\" data-position=\"bottom\" data-tooltip=\"I am a tooltip\" src={sessionInfo ? Spy : SpyDark} onClick={() => { onClickHandler() }}/>\r\n            <p>{sessionInfo}</p>\r\n        </div>\r\n    )}\r\n\r\nexport default Authenticate\r\n","import React from 'react';\r\nimport Github from './../../assets/images/github.png';\r\nimport './../Contact/Contact.scss';\r\n\r\nconst Contact = () => {\r\n    return <div className=\"contact\"><a href=\"https://www.github.com/gokhanipek\"><img alt=\"github\" className=\"contact-image\" src={Github} /></a></div>\r\n}\r\n\r\nexport default Contact;","import React, { useEffect } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport { resetSearchResults, getAuthTokenAction, getPopularMoviesAction, requestSessionId, getAccountDetails } from \"../../store/actions\";\r\nimport SearchMovies from '../SearchMovies/SearchMovies';\r\nimport Logo from './../Logo/Logo'; \r\nimport './Home.scss';\r\nimport Authenticate from \"../Authenticate/Authenticate\";\r\nimport Contact from \"../Contact/Contact\";\r\n\r\nconst Home = ({getAuthTokenAction, location, searchResults, requestSessionId, resetSearchResults}) => {\r\n  useEffect(() => {\r\n    const isAuthenticated = location.search.includes('approved=true')\r\n    const {request_token} = isAuthenticated ? authorizedToken() : {};\r\n    requestSessionId(request_token);\r\n  }, [])\r\n\r\n  const isAuthenticated = JSON.parse(localStorage.getItem('vakaren_session_id'));\r\n\r\n  const authorizedToken = () => {\r\n    if(location.search === '') return null;\r\n    const params = location.search.substring(1).split('&');\r\n    const paramsObject = {};\r\n    \r\n    params.map(param => {\r\n      const [key, value] = param.split('=');\r\n      paramsObject[key] = value;\r\n    })\r\n\r\n    return paramsObject;\r\n  }\r\n\r\n\r\n  const onClickHandler = () => {\r\n    return isAuthenticated ? null : getAuthTokenAction();\r\n  }\r\n\r\n  const onLogoClickHandler = () => {\r\n    return resetSearchResults();\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className={`home-wrapper ${searchResults.length > 0 ? 'top' : 'bottom'}`}>\r\n          <Authenticate isAuthenticated={isAuthenticated} onClickHandler={onClickHandler} />\r\n          <Logo onClickHandler={onLogoClickHandler}/>\r\n          <SearchMovies/>\r\n          <Contact/>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ getAuthTokenAction, getPopularMoviesAction, requestSessionId, getAccountDetails, resetSearchResults }, dispatch);\r\n\r\nconst mapStateToProps = state => ({ \r\n    searchResults: state.data.searchResults.results || null \r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\r\n","import React, {useEffect} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport { getMovieById, getMovieVideos, getMoviePosters, getAccountDetails, resetSearchResults } from './../../store/actions'\r\nimport Logo from './../Logo/Logo';\r\nimport NoImage from './../../assets/images/no-image.png'\r\n\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport './MoviePage.scss';\r\n\r\n\r\nconst MoviePage = ({getMovieById, getMovieVideos, match, getMoviePosters, movieDetails, moviePosters, movieVideos, resetSearchResults}) => {\r\n    useEffect(() => {\r\n        const {id} = match.params;\r\n        getMovieById(id);\r\n        getMovieVideos(id);\r\n        getMoviePosters(id);\r\n    }, [])\r\n\r\n    const {id, poster_path, title, runtime, tagline, overview, genres, release_date, homepage} = movieDetails;\r\n   \r\n    const jumbotronBackgroundStyle = {\r\n        backgroundImage: poster_path ? `url(https://image.tmdb.org/t/p/w500/${poster_path})` : `url(${NoImage})`\r\n    }\r\n\r\n    const onLogoClickHandler = () => {\r\n        return resetSearchResults();\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Logo face={false} classes={'navbar'} onClickHandler={onLogoClickHandler} />\r\n            {id ? <div className=\"movie-container\">\r\n                <div className=\"jumbotron\" style={jumbotronBackgroundStyle}>\r\n                    <span className=\"jumbotron-overlay\"/>\r\n                    <div className=\"jumbotron-right-side\">\r\n                        <p className=\"title\">{title}</p>\r\n                        {runtime && <p className=\"movie-info runtime\">Runtime: {runtime } mins</p>}\r\n                        {tagline && <p className=\"movie-info tagline\">Tagline:  {tagline}</p>}\r\n                        {overview && <p className=\"movie-info overview\">Overview: {overview}</p>}\r\n                        {homepage && <p className=\"movie-info website\"><a href={homepage} target=\"_blank\" rel=\"noopener noreferrer\">Website</a></p>}\r\n                        {genres && <p className=\"movie-info genres\">{genres && genres.map(genre => <span key={genre.id} className=\"bubble\">{genre.name}</span>)} </p>}\r\n                        {release_date && <p className=\"movie-info release-date\">Release Date: {release_date}</p>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"video-container\">\r\n                    <h3 className=\"carousel-title\">Videos</h3>\r\n                    {movieVideos && movieVideos.length > 0 ? movieVideos.map((video, index) => \r\n                        <iframe\r\n                            className=\"movie-video\"\r\n                            src={`https://www.youtube.com/embed/${video.key}`}\r\n                            frameBorder='0'\r\n                            allow='autoplay; encrypted-media'\r\n                            allowFullScreen\r\n                            title='video'\r\n                            key={index}\r\n                        />\r\n                        )\r\n                    : <div className=\"no-such-movie\"> This movie has no videos available. </div>}\r\n                </div>\r\n                <div className=\"image-container\">\r\n                    <h3 className=\"carousel-title\">Posters</h3>\r\n                    <div className=\"images\">\r\n                        {moviePosters && moviePosters.length > 0 ? moviePosters.map((poster, index) => \r\n                                <img className=\"movie-posters\" alt=\"poster\" key={index} src={`https://image.tmdb.org/t/p/w500${poster.file_path}`} />\r\n                            )\r\n                        : <div className=\"no-such-movie\"> This movie has no posters available. </div> }\r\n                    </div>\r\n                </div>\r\n            </div> : <div className=\"no-such-movie\"> <img alt=\"noimage\" src={NoImage} /> There is no such movie. Please go back to search. </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ \r\n    movieDetails: state.data.movieDetails,\r\n    moviePosters: state.data.moviePosters.posters,\r\n    movieBackdrops: state.data.moviePosters.backdrops,\r\n    movieVideos: state.data.movieVideos.results\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getMovieById: id => dispatch(getMovieById(id)),\r\n        getMovieVideos: id => dispatch(getMovieVideos(id)),\r\n        getMoviePosters: id => dispatch(getMoviePosters(id)),\r\n        getAccountDetails: () => dispatch(getAccountDetails()),\r\n        resetSearchResults: () => dispatch(resetSearchResults())\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MoviePage));\r\n\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport store from \"../store/store\";\r\nimport Home from \"./Home/Home\";\r\nimport MoviePage from \"./MoviePage/MoviePage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/movie/:id\" component={MoviePage}/>\r\n        <Route path=\"/*\" component={Home}/>\r\n      </Switch>\r\n    </Router>\r\n  </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n  \r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { unregister } from './serviceWorker';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render( <App /> , document.getElementById(\"root\"));\r\n\r\nunregister();\r\n\r\n\r\n"],"sourceRoot":""}